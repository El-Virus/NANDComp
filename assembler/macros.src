#Simulator
&STOP = 0
&HOLD = 1
&DUMP = 2
&CLRS = 3

#NAND Game
&SP = 0

%INIT_STACK
A = 0x100
D = A
A = SP
*A = D
%%

%PUSH_D
A = SP
*A = *A + 1
A = *A - 1
*A = D
%%

%POP_D
A = SP
*A = *A - 1
A = *A
D = *A
%%

%POP_A
A = SP
*A = *A - 1
A = *A
A = *A
%%

%PUSH_VALUE $value
A = $value
D = A
PUSH_D
%%

%ADD
POP_D
POP_A
D = D + A
PUSH_D
%%

%SUB
POP_D
POP_A
D = A - D
PUSH_D
%%

%NEG
POP_D
D = -D
PUSH_D
%%

%AND
POP_D
POP_A
D = D & A
PUSH_D
%%

%OR
POP_D
POP_A
D = D | A
PUSH_D
%%

%EQ
SUB
POP_D
A = true
D; JEQ
D = 0
A = end
JMP
LABEL true
D = -1
LABEL end
PUSH_D
%%

%GT
SUB
POP_D
A = true
D; JGT
D = 0
A = end
JMP
LABEL true
D = -1
LABEL end
PUSH_D
%%

%LT
SUB
POP_D
A = true
D; JLT
D = 0
A = end
JMP
LABEL true
D = -1
LABEL end
PUSH_D
%%

%NOT
POP_D
D = ~D
PUSH_D
%%

%GOTO $label
A = $label
JMP
%%

%IF_GOTO $label
POP_D
A = label
D; JNE
%%

%PUSH_MEMORY
POP_A
D = *A
PUSH_D
%%

%POP_MEMORY
POP_D
POP_A
*A = D
%%

%PUSH_STATIC $address
A = $address
D = *A
PUSH_D
%%

%POP_STATIC $address
POP_D
A = $address
*A = D
%%
